const fs = require('fs');
const path = require('path');

// –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
const filesToFix = [
  'components/ChatGPT.tsx',
  'pages/api/chat.ts'
];

function fixCorruptedSymbols(content) {
  return content
    // –£–±–∏—Ä–∞–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∑–∞–º–µ—â–µ–Ω–∏—è Unicode
    .replace(/\uFFFD/g, '')
    .replace(/[ÔøΩ]/g, '')
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
    .replace(/\u{FFFD}/gu, '')
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–±—â–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
    .replace(/—Ç–∞—Ä–∏ÔøΩÔøΩ–∞—Ö/g, '—Ç–∞—Ä–∏—Ñ–∞—Ö')
    .replace(/–≥ÔøΩÔøΩ–ª–æ—Å–æ–≤/g, '–≥–æ–ª–æ—Å–æ–≤')
    .replace(/–∫–ªÔøΩÔøΩ—á–∞/g, '–∫–ª—é—á–∞')
    .replace(/–ûÔøΩÔøΩ–∏—â–∞–µ–º/g, '–û—á–∏—â–∞–µ–º')
    .replace(/ÔøΩÔøΩ–∞–ø—É—Å–∫–∞–µ–º/g, '–∑–∞–ø—É—Å–∫–∞–µ–º')
    .replace(/–ø–æ–¥–∫–ª—é—á–µ–Ω–∏ÔøΩÔøΩ–º/g, '–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º')
    .replace(/ÔøΩÔøΩ—ã—Ä–µ–∑–∞–Ω–∏–µ/g, '–≤—ã—Ä–µ–∑–∞–Ω–∏–µ')
    .replace(/–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–ΩÔøΩÔøΩ—è/g, '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è')
    .replace(/–ø—Ä–æ–±–ª–µ–ºÔøΩÔøΩ–π/g, '–ø—Ä–æ–±–ª–µ–º–Ω—ã–π')
    .replace(/—Å–∏—Å—Ç–µ–ºÔøΩÔøΩ/g, '—Å–∏—Å—Ç–µ–º—ã')
    .replace(/—Å–æ–æ–±—â–µ–Ω–∏ÔøΩÔøΩ/g, '—Å–æ–æ–±—â–µ–Ω–∏–µ')
    .replace(/—Ñ—É–Ω–∫—Ü–∏ÔøΩÔøΩ/g, '—Ñ—É–Ω–∫—Ü–∏—è')
    .replace(/–∞–Ω–∞–ª–∏–∑–∏—Ä—ÉÔøΩÔøΩ/g, '–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é')
    .replace(/—Ñ–æ—Ä–º–∏—Ä—ÉÔøΩÔøΩ/g, '—Ñ–æ—Ä–º–∏—Ä—É—é')
    .replace(/–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏ÔøΩÔøΩ/g, '–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ')
    .replace(/–æ–±—Ä–∞–±–æ—ÇÔøΩÔøΩ/g, '–æ–±—Ä–∞–±–æ—Ç–∫—É');
}

filesToFix.forEach(filePath => {
  try {
    const content = fs.readFileSync(filePath, 'utf8');
    const fixedContent = fixCorruptedSymbols(content);
    
    if (content !== fixedContent) {
      fs.writeFileSync(filePath, fixedContent, 'utf8');
      console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã —Å–∏–º–≤–æ–ª—ã –≤: ${filePath}`);
    } else {
      console.log(`‚≠ê –°–∏–º–≤–æ–ª—ã –≤ –ø–æ—Ä—è–¥–∫–µ: ${filePath}`);
    }
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ ${filePath}:`, error.message);
  }
});

console.log('üéâ –û—á–∏—Å—Ç–∫–∞ —Å–∏–º–≤–æ–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
